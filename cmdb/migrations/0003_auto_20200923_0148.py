# Generated by Django 3.1.1 on 2020-09-23 01:48

import cmdb.fields
import cmdb.models
from django.db import migrations, models
import django.db.models.deletion
import markdownx.models


class Migration(migrations.Migration):

    dependencies = [
        ('cmdb', '0002_servicegroup'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', cmdb.fields.StringField(choices=[('Manager', 'Manager'), ('Technician', 'Technician'), ('Client', 'Client'), ('Key user', 'Key user')], default='Manager', max_length=250, verbose_name='Kind')),
                ('name', models.CharField(max_length=250, verbose_name='Nome')),
                ('comments', markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.AddField(
            model_name='assetkind',
            name='comments',
            field=markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='executedcommands',
            name='subject',
            field=cmdb.fields.StringField(default='Initial', max_length=250, verbose_name='Subject'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='comments',
            field=markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='service',
            name='service_group',
            field=cmdb.fields.FK(default=1, on_delete=django.db.models.deletion.CASCADE, to='cmdb.servicegroup', verbose_name='Service group'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='storage',
            name='mount_point',
            field=cmdb.fields.StringField(default='/var', max_length=250, verbose_name='Mount point'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='configuredasset',
            name='comments',
            field=markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='machine',
            name='comments',
            field=markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments'),
        ),
        migrations.AlterField(
            model_name='machine',
            name='url',
            field=models.URLField(blank=True, null=True, verbose_name='URL'),
        ),
        migrations.AlterField(
            model_name='networkinterface',
            name='ipv4_address',
            field=models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='Endere√ßo IPv4'),
        ),
        migrations.AlterField(
            model_name='networkinterface',
            name='ipv6_address',
            field=models.GenericIPAddressField(blank=True, null=True, protocol='IPv6', verbose_name='IPv6 address'),
        ),
        migrations.CreateModel(
            name='VisualTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', cmdb.fields.StringField(max_length=250, verbose_name='Nome')),
                ('url', models.URLField(verbose_name='URL')),
                ('screenshot', models.ImageField(upload_to='visual', verbose_name='Screenshot')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='Ordem')),
                ('how_to_test', markdownx.models.MarkdownxField(verbose_name='How to test')),
                ('service', cmdb.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='cmdb.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Visual test',
                'verbose_name_plural': 'Visual tests',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', cmdb.fields.StringField(choices=[('Personal e-Mail', 'Personal e-Mail'), ('Enterprise e-Mail', 'Enterprise e-Mail'), ('WhatsApp', 'WhatsApp'), ('Personal phone', 'Personal phone'), ('Enterprise phone', 'Enterprise phone')], default='Enterprise e-Mail', max_length=250, verbose_name='Kind')),
                ('content', cmdb.fields.StringField(max_length=250, verbose_name='Content')),
                ('comments', markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments')),
                ('Contact', models.ForeignKey(on_delete=cmdb.models.Contact, to='cmdb.contact')),
            ],
            options={
                'verbose_name': 'Canal',
                'verbose_name_plural': 'Channels',
            },
        ),
        migrations.CreateModel(
            name='AutomatedTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('http_code', models.PositiveSmallIntegerField(default=200, verbose_name='HTTP Code')),
                ('regex', models.CharField(blank=True, max_length=250, null=True, verbose_name='RegEx')),
                ('timeout', models.PositiveSmallIntegerField(verbose_name='Timeout (s)')),
                ('interval', models.PositiveSmallIntegerField(verbose_name='Intervalo (m)')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='Ordem')),
                ('comments', markdownx.models.MarkdownxField(blank=True, null=True, verbose_name='Comments')),
                ('service', cmdb.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='cmdb.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Automated test',
                'verbose_name_plural': 'Automated tests',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='contacts',
            field=models.ManyToManyField(to='cmdb.Contact'),
        ),
    ]
